lesson	
	1.面向对象的4个主要特征（抽象+封装+继承+多态）

		A.抽象：一个总的分类/纲目，一般也叫做抽象类/方法。例如狗和鸡都是动物，动物就是一个抽象类，狗和鸡则是这个抽象类下具体的对象；抽象类中包含没有具体实现的方法（只定义方法，不实现方法），但可以&必须在被继承的&发挥实际功能的子类中对抽象类中的方法进行实现&重载，以实现项目分类的规整。

		子类中会有各种不同的方法，但也会有具有相同作用但具体实现不同的方法。例如狗和鱼，都需要呼吸，区别是一个用肺一个用鱼鳔，那么呼吸是一个共同的抽象方法，而肺和鳔则是对呼吸抽象方法的“各自不同的具体实现”，这种“各自不同的具体实现”我称之为子类对抽象父类中呼吸抽象方法的重写（override）。【从0到1可视为重写，因为抽象方法并没有具体的参数和返回值】。
		抽象类的子类必须对父类中的抽象方法进行实现并重写（实际重不重写看实际需要），主要作用是方便项目的分类和规整。
		抽象类不可被实例化。

			P.S.不要把‘重载’和‘重写’弄混。重载是可以改变方法中的参数&返回值&访问修饰符；重写不可以改变方法中的参数&返回值，访问修饰符的限制一定要大于被重写方法的访问修饰符（public【公有，均可访问】>protected【只允许子类访问】>private【不可访问】），可以对方法中的逻辑方法体进行修改优化。
			*接口与抽象类特征类似，但使用方法不一样：一个子类只能有一个抽象的父类，但可以有多个不同的接口。


====================================		
		B.封装：限定具体实现某项功能的函数/方法的作用域，一般圈定在一个子类单元内；本身不干扰总体项目运行。
			关键字：var $a/public $a声明一个变量的属性为共有（在类中声明[不声明会报错]的变量除非被实例化的对象调用，否则不会占用内存空间）


====================================
		C.继承：父类的方法可以被子类调用。类似于具体类对抽象类中的方法在自己内部具体实现（加入新内容）。


===================================
		D.多态：不同对象（类）对处于同一处理范围的输入的不同响应。例如针对狗和人，会提供不同的医疗服务，‘不同的医疗服务’是不同的对象，狗是同样的输入。
			子类可以重写父类的方法。
===============================================3:13 2020/6/6